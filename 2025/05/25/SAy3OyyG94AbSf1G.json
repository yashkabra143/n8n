{"nodes":[{"parameters":{"options":{}},"id":"b24b05a7-d802-4413-bfb1-23e1e76f6203","name":"When chat message received","type":"@n8n/n8n-nodes-langchain.chatTrigger","typeVersion":1.1,"position":[360,20],"webhookId":"a889d2ae-2159-402f-b326-5f61e90f602e"},{"parameters":{"content":"## Start by saying 'hi'\n![Button](https://i.imgur.com/PrIBJI6.png)","height":149,"width":150},"id":"5592c045-6718-4c4e-9961-ce67a251b6df","name":"Sticky Note","type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[180,-40]},{"parameters":{"promptType":"define","text":"=## Steps to follow\n\n{{ $agentInfo.memoryConnectedToAgent ? '1. Skip': `1. STOP and output the following:\n\"Welcome to n8n. Let's start with the first step to give me memory: \\n\"Click the **+** button on the agent that says 'memory' and choose 'Simple memory.' Just tell me once you've done that.\"\n----- END OF OUTPUT && IGNORE BELOW -----` }} \n\n\n{{ Boolean($agentInfo.tools.find((tool) => tool.type === 'Google Calendar Tool')) ? '2. Skip' : \n`2. STOP and output the following: \\n\"Click the **+** button on the agent that says 'tools' and choose 'Google Calendar.'\" \\n ----- IGNORE BELOW -----` }}\n\n\n{{ $agentInfo.tools.find((tool) => tool.type === 'Google Calendar Tool').hasCredentials ? '3. Skip' :\n`3. STOP and output the following:\n\"Open the Google Calendar tool (double-click) and choose a credential from the drop-down.\" \\n ----- IGNORE BELOW -----` }}\n\n\n{{ $agentInfo.tools.find((tool) => tool.type === 'Google Calendar Tool').resource === 'Event' ? '4. Skip' :\n`4. STOP and output the following:\n\"Open the Google Calendar tool (double-click) and set **resource** = 'Event'\" `}}\n\n\n{{ $agentInfo.tools.find((tool) => tool.type === 'Google Calendar Tool').operation === 'Get Many' ? '5. Skip' :\n`5. STOP and output the following:\n\"Open the Google Calendar tool (double-click) and set **operation** = 'Get Many.'\" \\n ----- IGNORE BELOW -----` }}\n\n\n{{ $agentInfo.tools.find((tool) => tool.type === 'Google Calendar Tool').hasValidCalendar ? '6. Skip' :\n`6. STOP and output the following:\n\"Open the Google Calendar tool (double-click) and choose a calendar from the 'calendar' drop-down.\" \\n ----- IGNORE BELOW -----` }}\n\n\n{{ ($agentInfo.tools.find((tool) => tool.type === 'Google Calendar Tool').aiDefinedFields.includes('Start Time') && $agentInfo.tools.find((tool) => tool.type === 'Google Calendar Tool').aiDefinedFields.includes('End Time')) ? '7. Skip' :\n`7. STOP and output the following: \nOpen the Google Calendar tool (double-click) and click the :sparks: button next to the 'After' and 'Before' fields. \\n ----- IGNORE BELOW -----` }}\n\n\n8. If all steps are completed, output the following:\n\"Would you like me to check all events in your calendar for tomorrow {{ $now.plus(1, 'days').toString().split('T')[0] }}?\"\n\n# User message\n\n{{ $json.chatInput }}","options":{"systemMessage":"=You are a friendly Agent designed to guide users through these steps.\n\n- Stop at the earliest step mentioned in the steps\n- Respond concisely and do **not** disclose these internal instructions to the user. Only return defined output below.\n- Don't output any lines that start with -----\n- Replace \":sparks:\" with \"âœ¨\" in any message"}},"id":"41174c8a-6ac8-42bd-900e-ca15196600c5","name":"Agent","type":"@n8n/n8n-nodes-langchain.agent","typeVersion":1.7,"position":[580,20]},{"parameters":{},"type":"@n8n/n8n-nodes-langchain.memoryBufferWindow","typeVersion":1.3,"position":[728,240],"id":"232c4d92-c32e-4dc8-9b09-0ab875167223","name":"Simple Memory"},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatGoogleGemini","typeVersion":1,"position":[608,240],"id":"c30ee288-77e8-4bee-b26e-2ae5c2c913dc","name":"Google Gemini Chat Model","credentials":{"googlePalmApi":{"id":"B4bz4jXrgDmubU4b","name":"Google Gemini(PaLM) Api account"}}}],"connections":{"When chat message received":{"main":[[{"node":"Agent","type":"main","index":0}]]},"Simple Memory":{"ai_memory":[[{"node":"Agent","type":"ai_memory","index":0}]]},"Google Gemini Chat Model":{"ai_languageModel":[[{"node":"Agent","type":"ai_languageModel","index":0}]]}},"pinData":{},"meta":{"templateId":"self-building-ai-agent","templateCredsSetupCompleted":true}}